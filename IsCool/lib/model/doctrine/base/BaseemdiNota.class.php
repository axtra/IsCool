<?php

/**
 * BaseemdiNota
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $not_id
 * @property string $not_codigo_parcial
 * @property decimal $not_nota
 * @property integer $mat_id
 * @property integer $pro_id
 * @property integer $est_id
 * @property emdiMateria $mat
 * @property emdiEstudiante $est
 * 
 * @method integer        getNotId()              Returns the current record's "not_id" value
 * @method string         getNotCodigoParcial()   Returns the current record's "not_codigo_parcial" value
 * @method decimal        getNotNota()            Returns the current record's "not_nota" value
 * @method integer        getMatId()              Returns the current record's "mat_id" value
 * @method integer        getProId()              Returns the current record's "pro_id" value
 * @method integer        getEstId()              Returns the current record's "est_id" value
 * @method emdiMateria    getMat()                Returns the current record's "mat" value
 * @method emdiEstudiante getEst()                Returns the current record's "est" value
 * @method emdiNota       setNotId()              Sets the current record's "not_id" value
 * @method emdiNota       setNotCodigoParcial()   Sets the current record's "not_codigo_parcial" value
 * @method emdiNota       setNotNota()            Sets the current record's "not_nota" value
 * @method emdiNota       setMatId()              Sets the current record's "mat_id" value
 * @method emdiNota       setProId()              Sets the current record's "pro_id" value
 * @method emdiNota       setEstId()              Sets the current record's "est_id" value
 * @method emdiNota       setMat()                Sets the current record's "mat" value
 * @method emdiNota       setEst()                Sets the current record's "est" value
 * 
 * @package    emdi
 * @subpackage model
 * @author     Bitcoder
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseemdiNota extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('emdi_nota');
        $this->hasColumn('not_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unique' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('not_codigo_parcial', 'string', 4, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('not_nota', 'decimal', 1, array(
             'type' => 'decimal',
             'scale' => 1,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('mat_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('pro_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('est_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));

        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_spanish_ci');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('emdiMateria as mat', array(
             'local' => 'mat_id',
             'foreign' => 'mat_id'));

        $this->hasOne('emdiEstudiante as est', array(
             'local' => 'est_id',
             'foreign' => 'est_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}