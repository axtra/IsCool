<?php

/**
 * BaseemdiComRepresentante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $mre_id
 * @property clob $mre_contenido
 * @property string $mre_estado
 * @property integer $est_id
 * @property integer $pro_id
 * @property emdiEstudiante $est
 * @property emdiProfesor $pro
 * 
 * @method integer              getMreId()         Returns the current record's "mre_id" value
 * @method clob                 getMreContenido()  Returns the current record's "mre_contenido" value
 * @method string               getMreEstado()     Returns the current record's "mre_estado" value
 * @method integer              getEstId()         Returns the current record's "est_id" value
 * @method integer              getProId()         Returns the current record's "pro_id" value
 * @method emdiEstudiante       getEst()           Returns the current record's "est" value
 * @method emdiProfesor         getPro()           Returns the current record's "pro" value
 * @method emdiComRepresentante setMreId()         Sets the current record's "mre_id" value
 * @method emdiComRepresentante setMreContenido()  Sets the current record's "mre_contenido" value
 * @method emdiComRepresentante setMreEstado()     Sets the current record's "mre_estado" value
 * @method emdiComRepresentante setEstId()         Sets the current record's "est_id" value
 * @method emdiComRepresentante setProId()         Sets the current record's "pro_id" value
 * @method emdiComRepresentante setEst()           Sets the current record's "est" value
 * @method emdiComRepresentante setPro()           Sets the current record's "pro" value
 * 
 * @package    emdi
 * @subpackage model
 * @author     Bitcoder
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseemdiComRepresentante extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('emdi_com_representante');
        $this->hasColumn('mre_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('mre_contenido', 'clob', 65535, array(
             'type' => 'clob',
             'notnull' => true,
             'length' => 65535,
             ));
        $this->hasColumn('mre_estado', 'string', 1, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 0,
             'fixed' => 1,
             'length' => 1,
             ));
        $this->hasColumn('est_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('pro_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('fk_emdi_mensaje_representate_emdi_estudiante1_idx', array(
             'fields' => 
             array(
              0 => 'est_id',
             ),
             ));
        $this->index('fk_emdi_mensaje_representate_emdi_profesor1_idx', array(
             'fields' => 
             array(
              0 => 'pro_id',
             ),
             ));
        $this->option('collate', 'utf8_spanish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('emdiEstudiante as est', array(
             'local' => 'est_id',
             'foreign' => 'est_id'));

        $this->hasOne('emdiProfesor as pro', array(
             'local' => 'pro_id',
             'foreign' => 'pro_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}