emdi_plantilla:
  class: sfDoctrineRouteCollection
  options:
    model:                emdiPlantilla
    module:               adminPlantillas
    prefix_path:          /adminPlantillas
    column:               pla_id
    with_wildcard_routes: true

emdi_administracion:
  class: sfDoctrineRouteCollection
  options:
    model:                emdiAdministracion
    module:               admindatos
    prefix_path:          /admindatos
    column:               adm_id
    with_wildcard_routes: true

sf_guard_user:
  class: sfDoctrineRouteCollection
  options:
    model:                sfGuardUser
    module:               adminusuarios
    prefix_path:          /adminusuarios
    column:               id
    with_wildcard_routes: true

emdi_materia_x_grado_asignarmaterias:
  class: sfDoctrineRouteCollection
  options:
    model:                emdiMateriaXGrado
    module:               asignarmaterias
    prefix_path:          /asignarmaterias
    column:               mxg_id
    with_wildcard_routes: true

emdi_materia_x_grado:
  class: sfDoctrineRouteCollection
  options:
    model:                emdiMateriaXGrado
    module:               asignarmaterias222222
    prefix_path:          /asignarmaterias222222
    column:               mxg_id
    with_wildcard_routes: true

emdi_profesor:
  class: sfDoctrineRouteCollection
  options:
    model:                emdiProfesor
    module:               adminprofesores
    prefix_path:          /adminprofesores
    column:               pro_id
    with_wildcard_routes: true

emdi_materia:
  class: sfDoctrineRouteCollection
  options:
    model:                emdiMateria
    module:               adminmaterias
    prefix_path:          /adminmaterias
    column:               mat_id
    with_wildcard_routes: true

emdi_estudiante:
  class: sfDoctrineRouteCollection
  options:
    model:                emdiEstudiante
    module:               adminestudiantes
    prefix_path:          /adminestudiantes
    column:               est_id
    with_wildcard_routes: true

emdi_grado:
  class: sfDoctrineRouteCollection
  options:
    model:                emdiGrado
    module:               admingrados
    prefix_path:          /admingrados
    column:               gra_id
    with_wildcard_routes: true
    
emdi_tarea:
  class: sfDoctrineRouteCollection
  options:
    model:                emdiTarea
    module:               tareas
    prefix_path:          /tareas
    column:               tar_id
    with_wildcard_routes: true

# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules
homepage:
  url:   /
  param: { module: inicio, action: index }
#homepage:
#  url:   /
#  param: { module: job, action: index }

# generic rules
# please, remove them by adding more specific rules
default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*

# Rutas para sfGuard
sf_guard_signin:
  url:   /login
  param: { module: sfGuardAuth, action: signin }
 
sf_guard_signout:
  url:   /logout
  param: { module: sfGuardAuth, action: signout }
 
sf_guard_password:
  url:   /pedir_password
  param: { module: sfGuardAuth, action: password }
 
loggeado:
  url:   /portal
  param: { module: portal, action: index }
  
  
  
# *********************************************
# Reglas para JQuery desde Admin Generator
mostrar_materia_por_grado:
  url:    asignarmaterias/mostrar
  param:  { module: asignarmaterias, action: mostrar }
  
borrar_materia_por_grado:
  url:    asignarmaterias/borrar
  param:  { module: asignarmaterias, action: borrar }

# jquery para Tareas
mostrar_tareas_por_grado:
  url:    adminTareas/mostrar
  param:  { module: adminTareas, action: mostrar }
  
borrar_tarea:
  url:    adminTareas/borrar
  param:  { module: adminTareas, action: borrar }

# jquery para Comunicados
mostrar_alumnos_por_grado:
  url:    adminComunicados/mostrarEstudiantes
  param:  { module: adminComunicados, action: mostrarEstudiantes }

mostrar_plantillas:
  url:    adminComunicados/mostrarPlantillas
  param:  { module: adminComunicados, action: mostrarPlantillas }
    
enviar_comunicado_profesor:
  url:    adminComunicados/enviarComunicado
  param:  { module: adminComunicados, action: enviarComunicado }

render_flashes:
  url:    adminComunicados/renderFlashes
  param:  { module: adminComunicados, action: renderFlashes }

enviar_comunicado_general:
  url:    adminComunicados/enviarComunicadoGeneral
  param:  { module: adminComunicados, action: enviarComunicadoGeneral }

enviar_nota:
  url:    agenda/enviarComunicado
  param:  { module: agenda, action: enviarComunicado }

cambiar_fecha:
  url:    agenda/cambiarFecha
  param:  { module: agenda, action: cambiarFecha }

cambiar_fecha_moderador:
  url:    moderador/cambiarFecha
  param:  { module: moderador, action: cambiarFecha }
  
enviar_moderacion:
  url:    moderador/enviarModeracion
  param:  { module: moderador, action: enviarModeracion }
  
administrativo_alumnos_por_grado:
  url:    administrativoComunicados/mostrarEstudiantes
  param:  { module: administrativoComunicados, action: mostrarEstudiantes }
    
administrativo_comunicado_profesor:
  url:    administrativoComunicados/enviarComunicado
  param:  { module: administrativoComunicados, action: enviarComunicado }

administrativo_render_flashes:
  url:    administrativoComunicados/renderFlashes
  param:  { module: administrativoComunicados, action: renderFlashes }

moderador_alumnos_por_grado:
  url:    moderarTareas/mostrarEstudiantes
  param:  { module: moderarTareas, action: mostrarEstudiantes }
  
moderador_agendas:
  url:    moderarTareas/mostrarAgenda
  param:  { module: moderarTareas, action: mostrarAgenda }
  
moderador_cambiar_fecha:
  url:    moderarTareas/cambiarFecha
  param:  { module: moderarTareas, action: cambiarFecha }
  
cambiar_estado_tarea:
  url:    agenda/cambiarEstadoTarea
  param:  { module: agenda, action: cambiarEstadoTarea }
cargar_tareas_pendientes:
  url:    agenda/getTareasPendientes
  param:  { module: agenda, action: getTareasPendientes }